components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
          format: email
        name:
          type: string
        role:
          type: string
          enum: [user, admin]
      example:
        id: 5ebac534954b54139806c112
        email: fake@example.com
        name: fake name
        role: user

    Token:
      type: object
      properties:
        token:
          type: string
        expires:
          type: string
          format: date-time
      example:
        token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1ZWJhYzUzNDk1NGI1NDEzOTgwNmMxMTIiLCJpYXQiOjE1ODkyOTg0ODQsImV4cCI6MTU4OTMwMDI4NH0.m1U63blB0MLej_WfB7yC2FTMnCziif9X8yzwDEfJXAg
        expires: 2020-05-12T16:18:04.793Z

    AuthTokens:
      type: object
      properties:
        access:
          $ref: '#/components/schemas/Token'
        refresh:
          $ref: '#/components/schemas/Token'

    DomainObjectProperties:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        caption:
          type: string
        description:
          type: string
        updatedAt:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
    CreateOrUpdateDomainObjectBody:
      type: object
      required:
        - name
        - caption
        - description
      properties:
        name:
          type: string
        caption:
          type: string
        description:
          type: string
      example:
        name: domain object a
        caption: just a caption
        description: just a desription
    CreateOrUpdateDomainObjectResponse:
      type: object
      properties:
        message:
          type: string
        data:
          $ref: '#/components/schemas/DomainObjectProperties'
    GetAllDomainObjectResponse:
      type: object
      properties:
        message:
          type: string
        data:
          type: object
          properties:
            count:
              type: integer
            rows:
              type: array
              items:
                $ref: '#/components/schemas/DomainObjectProperties'
    GetDomainObjectResponse:
      type: object
      properties:
        message:
          type: string
        data:
          $ref: '#/components/schemas/DomainObjectProperties'
    DeleteDomainObjectResponse:
      type: object
      properties:
        message:
          type: string
        data:
          type: object
    DomainTypeProperties:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        caption:
          type: string
        description:
          type: string
        definition:
          type: object
        updatedAt:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
    CreateOrUpdateDomainTypeBody:
      type: object
      required:
        - name
        - caption
        - description
        - definition
      properties:
        name:
          type: string
        caption:
          type: string
        description:
          type: string
        definition:
          type: object
      example:
        name: domain type a
        caption: just a caption
        description: just a desription
        definition:
          { 'input': { 'name': 'isname', 'product': 'isproduct' }, 'output': { 'output': 'isoutput', 'key': 'iskey' } }
    CreateOrUpdateDomainTypeResponse:
      type: object
      properties:
        message:
          type: string
        data:
          $ref: '#/components/schemas/DomainTypeProperties'
    GetAllDomainTypeResponse:
      type: object
      properties:
        message:
          type: string
        data:
          type: object
          properties:
            count:
              type: integer
            rows:
              type: array
              items:
                $ref: '#/components/schemas/DomainTypeProperties'
    GetDomainTypeResponse:
      type: object
      properties:
        message:
          type: string
        data:
          $ref: '#/components/schemas/DomainTypeProperties'
    DeleteDomainTypeResponse:
      type: object
      properties:
        message:
          type: string
        data:
          type: object

    ObjectDetailProperties:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        caption:
          type: string
        description:
          type: string
        domain_type_id:
          type: string
        object_domain_id:
          type: string
        updatedAt:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
    CreateOrUpdateObjectDetailBody:
      type: object
      required:
        - name
        - caption
        - description
      properties:
        name:
          type: string
        caption:
          type: string
        description:
          type: string
        domain_type_id:
          type: string
        object_domain_id:
          type: string
      example:
        name: domain object a
        caption: just a caption
        description: just a desription
        domain_type_id: 0b1b520e-aa4b-462a-837a-7816df2a3e2f
        object_domain_id: 6b288e74-24f0-4fda-95fe-615d00ea280d
    CreateOrUpdateObjectDetailResponse:
      type: object
      properties:
        message:
          type: string
        data:
          $ref: '#/components/schemas/ObjectDetailProperties'
    GetAllObjectDetailResponse:
      type: object
      properties:
        message:
          type: string
        data:
          type: object
          properties:
            count:
              type: integer
            rows:
              type: array
              items:
                $ref: '#/components/schemas/ObjectDetailProperties'
    GetObjectDetailResponse:
      type: object
      properties:
        message:
          type: string
        data:
          $ref: '#/components/schemas/ObjectDetailProperties'
    DeleteObjectDetailResponse:
      type: object
      properties:
        message:
          type: string
        data:
          type: object

    Error:
      type: object
      properties:
        code:
          type: number
        message:
          type: string

    Template:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        caption:
          type: string
        description:
          type: string
        configuration:
          $ref: '#/components/schemas/Configuration'

    Configuration:
      type: object
      properties:
        name:
          type: string
        title:
          type: string
        description:
          type: string
        input_dependency:
          type: string
        input_def:
          type: object
          properties:
            -:
              type: array
              items:
                $ref: '#/components/schemas/InputItem'
            /:
              type: array
              items:
                $ref: '#/components/schemas/InputItem'
            default:
              type: array
              items:
                $ref: '#/components/schemas/InputItem'
        output_def:
          type: object
          properties:
            type:
              type: string
        config_def:
          type: array
          items:
            $ref: '#/components/schemas/ConfigurationItem'

    InputItem:
      type: object
      properties:
        name:
          type: string
        caption:
          type: string
        description:
          type: string
        type:
          type: string

    ConfigurationItem:
      type: object
      properties:
        name:
          type: string
        caption:
          type: string
        description:
          type: string

  responses:
    DuplicateEmail:
      description: Email already taken
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 400
            message: Email already taken
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 401
            message: Please authenticate
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 403
            message: Forbidden
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 404
            message: Not found

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
